version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: finance-users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin1618
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  # Zookeeper Service for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  # Kafka Broker Service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - backend

  # Users Service (gRPC)
  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: users-service

    env_file:
      - ./users/.env
    ports:
      - "50051:50051"
    restart: on-failure
    depends_on:
      - postgres
      - kafka
    networks:
      - backend

  # Gateway Service (HTTP)
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    env_file:
      - ./gateway/.env
    ports:
      - "8080:8080"
    depends_on:
      - users
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
